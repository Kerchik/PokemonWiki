{"version":3,"sources":["img/loadingGif.gif","img/pokemon.png","components/Header.jsx","redux/mainMenuOptions.js","redux/pokemons.js","redux/types.js","redux/locations.js","components/Content.jsx","redux/dataReducer.js","components/ContentContainer.jsx","components/MainMenu.jsx","components/PokemonsProfile.jsx","redux/api.js","redux/pokemonsReducer.js","components/PokemonsProfileContainer.jsx","components/TypesProfile.jsx","redux/typesReducer.js","components/TypesProfileContainer.jsx","components/LocationsProfile.jsx","redux/locationsReducer.js","components/LocationsProfileContainer.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","mainMenuOptions","id","name","photo","pokemons","types","locations","Content","changeId","changePhoto","type","useState","isHidden","setIsHidden","link","onClick","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","initialState","dataReducer","state","action","ContentContainer","connect","MainMenu","PokemonsProfile","weight","height","abilitiesArr","typesArr","locationArr","getPokemonInfo","clearData","useEffect","map","ability","index","key","loading","loc","api","fetch","ref","setLocation","getLocation","dispatch","then","response","text","data","locArr","json","JSON","parse","length","forEach","element","push","location_area","pokemonsReducer","el","split","join","PokemonsProfileContainer","abilArr","abilities","location_area_encounters","setPokemon","TypesProfile","getTypeInfo","moveDamageClass","pokemonArr","poke","typesReducer","TypesProfileContainer","pokemon","move_damage_class","i","setType","LocationsProfile","locationName","regionName","areasArr","otherNamesArr","getLocationInfo","area","locationsReducer","LocationsProfileContainer","region","areas","names","App","exact","path","render","props","m","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fee05e02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.e4b6323e.gif\";","module.exports = __webpack_public_path__ + \"static/media/pokemon.e1b54715.png\";","import React from 'react'\r\nimport logo from '../img/pokemon.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"pokemonLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header","export const mainMenuOptions = [\r\n    {\r\n        id: 1,\r\n        name: \"Pokemons\",\r\n        photo: \"https://upload.wikimedia.org/wikipedia/ru/c/ca/%D0%91%D1%83%D0%BB%D1%8C%D0%B1%D0%B0%D0%B7%D0%B0%D0%B2%D1%80.png\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Types\",\r\n        photo: \"https://static.pokemonpets.com/images/monsters-images-800-800/2056-Shiny-Mankey.png\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Locations\",\r\n        photo: \"https://cdn.bulbagarden.net/upload/thumb/a/a6/Canalave_City_Pt.png/384px-Canalave_City_Pt.png\"\r\n    }\r\n]","export const pokemons = [\r\n    {\r\n        id: 1,\r\n        name: 'Bulbasaur',\r\n        photo: 'https://upload.wikimedia.org/wikipedia/ru/c/ca/%D0%91%D1%83%D0%BB%D1%8C%D0%B1%D0%B0%D0%B7%D0%B0%D0%B2%D1%80.png'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Ivysaur',\r\n        photo: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/002.png'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Venasaur',\r\n        photo: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/003.png'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Charmander',\r\n        photo: 'https://static.pokemonpets.com/images/monsters-images-300-300/4-Charmander.png'\r\n    },\r\n    {\r\n        id: 25,\r\n        name: 'Pikachu',\r\n        photo: 'https://i.pinimg.com/originals/76/47/9d/76479dd91dc55c2768ddccfc30a4fbf5.png'\r\n    },\r\n]","export const types = [\r\n    {\r\n        id: 1,\r\n        name: 'Normal',\r\n        photo: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/022.png'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Fighting',\r\n        photo: 'https://static.pokemonpets.com/images/monsters-images-800-800/2056-Shiny-Mankey.png'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Flying',\r\n        photo: 'https://www.serebii.net/swordshield/pokemon/012-f.png'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Poison',\r\n        photo: 'https://assets.pokemon.com/assets/cms2/img/pokedex/full/032.png'\r\n    },\r\n]","export const locations = [\r\n    {\r\n        id: 1,\r\n        name: \"Canalave City\",\r\n        photo: \"https://cdn.bulbagarden.net/upload/thumb/a/a6/Canalave_City_Pt.png/384px-Canalave_City_Pt.png\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Eterna City\",\r\n        photo: \"https://cdn.bulbagarden.net/upload/6/6c/Eterna_City_DP.png\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Pastoria City\",\r\n        photo: \"https://cdn.bulbagarden.net/upload/thumb/c/cb/Pastoria_City_Pt.png/300px-Pastoria_City_Pt.png\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Sunyshore City\",\r\n        photo: \"https://i1.sndcdn.com/artworks-000537272910-0fasc7-t500x500.jpg\"\r\n    },\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = ({changeId, id, changePhoto, photo, type, name}) => {\r\n    const [isHidden, setIsHidden] = useState(true)\r\n    const click = () => {\r\n        changeId(id);\r\n        changePhoto(photo);\r\n    }\r\n    const textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    const textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    const link = `${type}/info`\r\n        return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={link}>\r\n                <img className=\"transform\" alt={name} src={photo} id={id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nconst initialState = {\r\n    id: null,\r\n    photo: null\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default dataReducer;","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/dataReducer'\r\n\r\nconst ContentContainer = connect(null, {changeId, changePhoto})(Content)\r\nexport default ContentContainer;","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\nconst MainMenu = ({name, photo, id}) => {\r\n    const [isHidden, setIsHidden] = useState(true)\r\n\r\n    const textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    const textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={name}>\r\n                <img className=\"transform\" alt={name} src={photo} id={id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst PokemonsProfile = ({name, weight, height, photo, abilitiesArr, typesArr, locationArr, getPokemonInfo, id, clearData}) => {\r\n    useEffect(() => {\r\n        getPokemonInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={name} src={photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {name && <p>Name: {name}</p>}\r\n                    {weight &&<p>Weight: {weight}</p>}\r\n                    {height &&<p>Height: {height}</p>}\r\n                    {abilitiesArr && <p><b>Abilities:</b></p>}\r\n                    {abilitiesArr && abilitiesArr.map((ability,index) => {return <p key={index}>{ability}</p>})}\r\n                    {typesArr && <p><b>Type:</b></p>}\r\n                    {typesArr && typesArr.map((type,index) => {return <p key={index}>{type}</p>})}\r\n                    {locationArr ? <p><b>Locations:</b></p> : <img className=\"loading\" src={loading} />}\r\n                    {locationArr && locationArr.map((loc,index) => {return <p key={index}>{loc}</p>})}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default PokemonsProfile","export const api = {\r\n    getCharacter(id) {\r\n        return fetch(`https://swapi.co/api/people/${id}`)\r\n    },\r\n    getPlanet(id) {\r\n        return fetch(`https://swapi.co/api/planets/${id}`,{method:\"POST\"})\r\n    },\r\n    getFilm(id) {\r\n        return fetch(`https://swapi.co/api/films/${id}`,{method: \"POST\"})\r\n    },\r\n    getStarship(id) {\r\n        return fetch(`https://swapi.co/api/starships/${id}`,{method: \"POST\"})\r\n    },\r\n    getPokemon(id) {\r\n        return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n    },\r\n    getType(id) {\r\n        return fetch(`https://pokeapi.co/api/v2/type/${id}`)\r\n    },\r\n    getLocation(id) {\r\n        return fetch(`https://pokeapi.co/api/v2/location/${id}`)\r\n    },\r\n    getRef(ref) {\r\n        return fetch(ref)\r\n    },\r\n}","import {api} from './api'\r\n\r\nconst SET_POKEMON = \"SET_POKEMON\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_LOCATION = \"SET_LOCATION\"\r\n\r\nconst initialState = {\r\n    name: null,\r\n    weight: null,\r\n    height: null,\r\n    abilitiesArr: null,\r\n    typesArr: null,\r\n    locationArr: null\r\n    \r\n}\r\n\r\nconst pokemonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMON: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                weight: action.weight,\r\n                height: action.height,\r\n                abilitiesArr: action.abilitiesArr,\r\n                typesArr: action.typesArr\r\n            }\r\n        }\r\n        case SET_LOCATION: {\r\n            return {\r\n                ...state, \r\n                locationArr: action.locationArr.map(el => {\r\n                    return el.split('-').join(' ')\r\n                })\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: null,\r\n                weight: null,\r\n                height: null,\r\n                abilitiesArr: null,\r\n                typesArr: null,\r\n                locationArr: null\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setPokemon = (name, weight, height, abilitiesArr, typesArr) => ({type: SET_POKEMON, name, weight, height, abilitiesArr, typesArr})\r\nconst setLocation = (locationArr) => ({type: SET_LOCATION, locationArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getPokemonInfo = (id) => (dispatch) => {\r\n    api.getPokemon(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const abilArr = [];\r\n            const typesArr = [];\r\n            const {name, weight, height, abilities, types, location_area_encounters} = JSON.parse(data);\r\n            abilities.forEach(element => {\r\n                abilArr.push(element.ability.name);\r\n            });\r\n            types.forEach(element => {\r\n                typesArr.push(element.type.name);\r\n            });\r\n            dispatch(setPokemon(name, weight, height, abilArr, typesArr));\r\n            dispatch(getLocation(location_area_encounters));\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nconst getLocation = (ref) => (dispatch) => {\r\n    api.getRef(ref)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let locArr = []\r\n            const json = JSON.parse(data);\r\n            if (!json.length) {\r\n                locArr.push('Unknown')\r\n                dispatch(setLocation(locArr))\r\n            } else {\r\n                json.forEach(element => {\r\n                    locArr.push(element.location_area.name)\r\n                })\r\n                dispatch(setLocation(locArr))\r\n            }\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default pokemonsReducer;","import PokemonsProfile from './PokemonsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getPokemonInfo} from '../redux/pokemonsReducer'\r\n\r\nconst mapStateToProps = ({data, pokemons}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        name: pokemons.name,\r\n        weight: pokemons.weight,\r\n        height: pokemons.height,\r\n        abilitiesArr: pokemons.abilitiesArr,\r\n        typesArr: pokemons.typesArr,\r\n        locationArr: pokemons.locationArr\r\n    }\r\n}\r\n\r\nconst PokemonsProfileContainer = connect(mapStateToProps,{getPokemonInfo, clearData})(PokemonsProfile)\r\nexport default PokemonsProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst TypesProfile = ({name, photo, getTypeInfo, id, clearData, moveDamageClass, pokemonArr}) => {\r\n    useEffect(() => {\r\n        getTypeInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={name} src={photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {name && <p>Name: {name}</p>}\r\n                    {moveDamageClass && <p>Damage Class: {moveDamageClass}</p>}\r\n                    {pokemonArr ? <p><b>Pokemons:</b></p> : <img className=\"loading\" alt={name} src={loading} />}\r\n                    {pokemonArr && pokemonArr.map((poke,index) => {return <p key={index}>{poke}</p>})}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default TypesProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_TYPE = \"SET_TYPE\"\r\n\r\nconst initialState = {\r\n    name: null,\r\n    moveDamageClass: null,\r\n    pokemonArr: null,\r\n}\r\n\r\nconst typesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_TYPE: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                moveDamageClass: action.moveDamageClass,\r\n                pokemonArr: action.pokemonArr,\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: null,\r\n                moveDamageClass: null,\r\n                pokemonArr: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setType = (name, moveDamageClass, pokemonArr) => ({type: SET_TYPE, name, moveDamageClass, pokemonArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getTypeInfo = (id) => (dispatch) => {\r\n    let pokemonArr = [];\r\n    api.getType(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name, pokemon, move_damage_class} = JSON.parse(data);\r\n            for (let i = 0;i<pokemon.length;i++) {\r\n                if (i===10) break;\r\n                pokemonArr.push(pokemon[i].pokemon.name)\r\n            }\r\n            //console.log(pokemonNames)\r\n            dispatch(setType(name, move_damage_class.name, pokemonArr));\r\n        })\r\n    }\r\n    )\r\n}\r\n/*\r\nconst getHomeworld = (ref) => (dispatch) => {\r\n    api.getRef(ref)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name} = JSON.parse(data);\r\n            //dispatch(setHomeworld(name))\r\n        })\r\n    }\r\n    )\r\n}\r\n*/\r\nexport default typesReducer;","import TypesProfile from './TypesProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getTypeInfo} from '../redux/typesReducer'\r\n\r\nconst mapStateToProps = ({data, types}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        name: types.name,\r\n        moveDamageClass: types.moveDamageClass,\r\n        pokemonArr: types.pokemonArr\r\n        \r\n    }\r\n}\r\n\r\nconst TypesProfileContainer = connect(mapStateToProps,{getTypeInfo, clearData})(TypesProfile)\r\nexport default TypesProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst LocationsProfile = ({id ,photo, locationName, regionName, areasArr, otherNamesArr, getLocationInfo, clearData}) => {\r\n    useEffect(() => {\r\n        getLocationInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={locationName} src={photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {locationName && <p>Name: {locationName}</p>}\r\n                    {regionName &&<p>Region: {regionName}</p>}\r\n                    {otherNamesArr && <p><b>Other names:</b></p>}\r\n                    {otherNamesArr && otherNamesArr.map((name,index) => {return <p key={index}>{name}</p>})}\r\n                    {areasArr ? <p><b>Areas:</b></p> : <img className=\"loading\" src={loading} />}\r\n                    {areasArr && areasArr.map((area,index) => {return <p key={index}>{area}</p>})}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default LocationsProfile","import {api} from './api'\r\n\r\nconst SET_LOCATION = \"SET_LOC\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\n\r\nconst initialState = {\r\n    locationName: null,\r\n    regionName: null,\r\n    areasArr: null,\r\n    otherNamesArr: null,\r\n}\r\n\r\nconst locationsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_LOCATION: {\r\n            return {\r\n                ...state, \r\n                locationName: action.locationName.split('-').join(' '),\r\n                regionName: action.regionName,\r\n                areasArr: action.areasArr.map(el => {\r\n                    return el.split('-').join(' ')\r\n                }),\r\n                otherNamesArr: action.otherNamesArr,\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                locationName: null,\r\n                regionName: null,\r\n                areasArr: null,\r\n                otherNamesArr: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setLocation = (locationName, regionName, areasArr, otherNamesArr) => ({type: SET_LOCATION, locationName, regionName, areasArr, otherNamesArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getLocationInfo = (id) => (dispatch) => {\r\n    api.getLocation(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let areasArr = []\r\n            let otherNamesArr = []\r\n            const {name, region, areas, names} = JSON.parse(data)\r\n            areas.forEach(element => {\r\n                areasArr.push(element.name)\r\n            });\r\n            names.forEach(element => {\r\n                otherNamesArr.push(element.name)\r\n            });\r\n            dispatch(setLocation(name, region.name, areasArr, otherNamesArr))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default locationsReducer;","import LocationsProfile from './LocationsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getLocationInfo} from '../redux/locationsReducer'\r\n\r\nconst mapStateToProps = ({data, locations}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        locationName: locations.locationName,\r\n        regionName: locations.regionName,\r\n        areasArr: locations.areasArr,\r\n        otherNamesArr: locations.otherNamesArr,\r\n    }\r\n}\r\n\r\nconst LocationsProfileContainer = connect(mapStateToProps,{getLocationInfo, clearData})(LocationsProfile)\r\nexport default LocationsProfileContainer;","import React from 'react';\r\nimport './App.css';\r\nimport {Route} from 'react-router-dom'\r\nimport Header from './components/Header.jsx'\r\nimport {mainMenuOptions} from './redux/mainMenuOptions'\r\nimport {pokemons} from './redux/pokemons' \r\nimport {types} from './redux/types' \r\nimport {locations} from './redux/locations' \r\nimport ContentContainer from './components/ContentContainer'\r\nimport MainMenu from './components/MainMenu'\r\nimport PokemonsProfileContainer from './components/PokemonsProfileContainer';\r\nimport TypesProfileContainer from './components/TypesProfileContainer';\r\nimport LocationsProfileContainer from './components/LocationsProfileContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path=\"/Pokemons/info\"\r\n        render={(props) => <PokemonsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Types/info\"\r\n        render={(props) => <TypesProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Locations/info\"\r\n        render={(props) => <LocationsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Pokemons\"\r\n        render={(props) => pokemons.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Pokemons\"}/>)}/>\r\n      <Route exact path=\"/Types\"\r\n        render={(props) => types.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Types\"}/>)}/>\r\n      <Route exact path=\"/Locations\"\r\n        render={(props) => locations.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Locations\"}/>)}/>\r\n      <Route exact path=\"/\"\r\n        render={(props) => mainMenuOptions.map(m => <MainMenu {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport dataReducer from \"./dataReducer\"\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport pokemonsReducer from \"./pokemonsReducer\";\r\nimport typesReducer from './typesReducer';\r\nimport locationsReducer from './locationsReducer';\r\n\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n    pokemons: pokemonsReducer,\r\n    types: typesReducer,\r\n    locations: locationsReducer,\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render((\r\n<Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>\r\n</Provider>),\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}