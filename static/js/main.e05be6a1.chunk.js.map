{"version":3,"sources":["img/sw.png","components/Profile.jsx","redux/charactersReducer.js","redux/profileReducer.js","components/ProfileContainer.jsx","components/Header.jsx","redux/characters.js","components/Content.jsx","components/ContentContainer.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","Profile","props","state","name","height","mass","hairColor","gender","homeworld","bind","world","fetch","then","data","text","data2","json","JSON","parse","setState","this","getCharacterInfo","id","clearData","className","alt","src","photo","React","Component","initialState","changeId","type","charactersReducer","action","api","get","profileReducer","ProfileContainer","connect","characters","profile","dispatch","newPostText","response","hair_color","Header","to","logo","Content","useState","isHidden","setIsHidden","onClick","changePhoto","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","ContentContainer","newId","newPhoto","App","exact","path","render","map","m","key","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e05be6a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw.b78faeed.png\";","import React from 'react'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n            height: \"\",\r\n            mass: \"\",\r\n            hairColor: \"\",\r\n            gender: \"\",\r\n            homeworld: \"\"\r\n        }\r\n        this.homeworld = this.homeworld.bind(this)\r\n    }\r\n    homeworld(world) {\r\n        fetch(world)\r\n        .then(data => {\r\n            data.text()\r\n            .then(data2 => {\r\n                let json = JSON.parse(data2);\r\n                this.setState({\r\n                    homeworld: json.name\r\n                });\r\n            })\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.getCharacterInfo(this.props.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={this.state.name} src={this.props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {this.props.name &&<p>Name: {this.props.name}</p>}\r\n                    {this.props.height &&<p>Height: {this.props.height}</p>}\r\n                    {this.props.mass &&<p>Mass: {this.props.mass}</p>}\r\n                    {this.props.hairColor &&<p>Hair Color: {this.props.hairColor}</p>}\r\n                    {this.props.gender &&<p>Gender: {this.props.gender}</p>}\r\n                    {this.props.homeworld && <p>Homeworld: {this.props.homeworld}</p>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n}\r\n\r\nexport default Profile","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nlet initialState = {\r\n    id: \"\",\r\n    photo: \"\"\r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default charactersReducer;","const CHANGE_DATA = \"CHANGE_DATA\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\n\r\nlet initialState = {\r\n    name: \"\",\r\n    height: \"\",\r\n    mass: \"\",\r\n    hairColor: \"\",\r\n    gender: \"\",\r\n    homeworld: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_DATA: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                height: action.height,\r\n                mass: action.mass,\r\n                hairColor: action.hairColor,\r\n                gender: action.gender,\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: \"\",\r\n                height: \"\",\r\n                mass: \"\",\r\n                hairColor: \"\",\r\n                gender: \"\",\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeData = (name,height,mass,hairColor,gender) => ({type: CHANGE_DATA, name,height,mass,hairColor,gender})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getCharacterInfo = (id) => (dispatch) => {\r\n    api.get(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(changeData(json.name,json.height,json.mass,json.hair_color,json.gender))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nconst api = {\r\n    get(id) {\r\n        return fetch(`https://swapi.co/api/people/${id}`)\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {changeId} from '../redux/charactersReducer'\r\nimport {getCharacterInfo,clearData} from '../redux/profileReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.characters.id,\r\n        photo: state.characters.photo,\r\n        name: state.profile.name,\r\n        height: state.profile.height,\r\n        mass: state.profile.mass,\r\n        gender: state.profile.gender,\r\n        hairColor: state.profile.hairColor,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newPostText) => {\r\n            dispatch(changeId(newPostText));\r\n        },\r\n        getCharacterInfo: (id) => {\r\n            dispatch(getCharacterInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData());\r\n        },\r\n    }\r\n}\r\n\r\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile)\r\nexport default ProfileContainer;","import React from 'react'\r\nimport logo from '../img/sw.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"swLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Header","export const characters = [\r\n    {\r\n        id: 1,\r\n        name: \"Luke Skywalker\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"C-3PO\",\r\n        photo: \"https://images.immediate.co.uk/production/volatile/sites/3/2019/10/EP9-FF-001686-336e75b.jpg?quality=90&resize=620,413\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"R2-D2\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/1/1a/R2d2.jpg/revision/latest/scale-to-width-down/500?cb=20120924084739\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Darth Vader\",\r\n        photo: \"https://cdn1us.denofgeek.com/sites/denofgeekus/files/vader-main.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Leia Organa\",\r\n        photo: \"https://am22.akamaized.net/tms/cnt/uploads/2017/08/leiatop1-650x574.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Owen Lars\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/e/eb/OwenCardTrader.png/revision/latest?cb=20171108050140\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beru Whitesun Lars\",\r\n        photo: \"https://i.imgur.com/hMBCi5x.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"R5-D4\",\r\n        photo: \"https://cdn11.bigcommerce.com/s-0kvv9/images/stencil/1280x1280/products/159139/222171/apifmy1pb__62136.1493318333.jpg?c=2&imbypass=on\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Biggs Darklighter\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/0/00/BiggsHS-ANH.png/revision/latest?cb=20130305010406\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Obi-Wan Kenobi   \",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4e/ObiWanHS-SWE.jpg/revision/latest?cb=20111115052816\"\r\n    },\r\n\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n    let click = () => {\r\n        props.changeId(props.id);\r\n        props.changePhoto(props.photo);\r\n    }\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to=\"/info\">\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/charactersReducer'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newId) => {\r\n            dispatch(changeId(newId));\r\n        },\r\n        changePhoto: (newPhoto) => {\r\n            dispatch(changePhoto(newPhoto));\r\n        }\r\n    }\r\n}\r\n\r\nconst ContentContainer = connect(null, mapDispatchToProps)(Content)\r\nexport default ContentContainer;","import React from 'react';\r\nimport './App.css';\r\nimport ProfileContainer from './components/ProfileContainer';\r\nimport {Route} from 'react-router-dom'\r\nimport Header from './components/Header.jsx'\r\nimport {characters} from './redux/characters'\r\nimport ContentContainer from './components/ContentContainer'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path=\"/\"\r\n        render={(props) => characters.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>  \r\n      <Route path=\"/info\"\r\n        render={(props) => <ProfileContainer {...props}  />}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport charactersReducer from \"./charactersReducer\"\r\nimport profileReducer from \"./profileReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nlet reducers = combineReducers({\r\n    characters: charactersReducer,\r\n    profile: profileReducer,\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render((\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n</BrowserRouter>),\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}