{"version":3,"sources":["img/sw.png","components/Profile.jsx","redux/charactersReducer.js","components/ProfileContainer.jsx","components/Header.jsx","redux/characters.js","components/Content.jsx","components/ContentContainer.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","Profile","props","state","name","height","mass","hairColor","gender","homeworld","bind","world","fetch","then","data","text","data2","json","JSON","parse","setState","this","id","hair_color","className","alt","src","photo","React","Component","initialState","changeId","type","charactersReducer","action","ProfileContainer","connect","characters","dispatch","newPostText","Header","to","logo","Content","useState","isHidden","setIsHidden","onClick","changePhoto","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","ContentContainer","newId","newPhoto","App","exact","path","render","map","m","key","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6ed6069.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw.b78faeed.png\";","import React from 'react'\r\n\r\nclass Profile extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n            height: \"\",\r\n            mass: \"\",\r\n            hairColor: \"\",\r\n            gender: \"\",\r\n            homeworld: \"\"\r\n        }\r\n        this.homeworld = this.homeworld.bind(this)\r\n    }\r\n    homeworld(world) {\r\n        fetch(world)\r\n        .then(data => {\r\n            data.text()\r\n            .then(data2 => {\r\n                let json = JSON.parse(data2);\r\n                this.setState({\r\n                    homeworld: json.name\r\n                });\r\n            })\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        fetch(`https://swapi.co/api/people/${this.props.id}`)\r\n        .then(data => {\r\n            data.text()\r\n            .then(data2 => {\r\n                let json = JSON.parse(data2);\r\n                this.setState({\r\n                    name: json.name,\r\n                    height: json.height,\r\n                    mass: json.mass,\r\n                    hairColor: json.hair_color,\r\n                    gender: json.gender\r\n                });\r\n                this.homeworld(json.homeworld)\r\n            })\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={this.state.name} src={this.props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {this.state.name &&<p>Name: {this.state.name}</p>}\r\n                    {this.state.height &&<p>Height: {this.state.height}</p>}\r\n                    {this.state.mass &&<p>Mass: {this.state.mass}</p>}\r\n                    {this.state.hairColor &&<p>Hair Color: {this.state.hairColor}</p>}\r\n                    {this.state.gender &&<p>Gender: {this.state.gender}</p>}\r\n                    {this.state.homeworld && <p>Homeworld: {this.state.homeworld}</p>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n}\r\n\r\nexport default Profile","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nlet initialState = {\r\n    id: \"\",\r\n    photo: \"\"\r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default charactersReducer;","import Profile from './Profile'\r\nimport {connect} from 'react-redux'\r\nimport {changeId} from '../redux/charactersReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.characters.id,\r\n        photo: state.characters.photo\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newPostText) => {\r\n            dispatch(changeId(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst ProfileContainer = connect(mapStateToProps, mapDispatchToProps)(Profile)\r\nexport default ProfileContainer;","import React from 'react'\r\nimport logo from '../img/sw.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"swLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Header","export const characters = [\r\n    {\r\n        id: 1,\r\n        name: \"Luke Skywalker\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"C-3PO\",\r\n        photo: \"https://images.immediate.co.uk/production/volatile/sites/3/2019/10/EP9-FF-001686-336e75b.jpg?quality=90&resize=620,413\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"R2-D2\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/1/1a/R2d2.jpg/revision/latest/scale-to-width-down/500?cb=20120924084739\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Darth Vader\",\r\n        photo: \"https://cdn1us.denofgeek.com/sites/denofgeekus/files/vader-main.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Leia Organa\",\r\n        photo: \"https://am22.akamaized.net/tms/cnt/uploads/2017/08/leiatop1-650x574.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Owen Lars\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/e/eb/OwenCardTrader.png/revision/latest?cb=20171108050140\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beru Whitesun Lars\",\r\n        photo: \"https://i.imgur.com/hMBCi5x.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"R5-D4\",\r\n        photo: \"https://cdn11.bigcommerce.com/s-0kvv9/images/stencil/1280x1280/products/159139/222171/apifmy1pb__62136.1493318333.jpg?c=2&imbypass=on\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Biggs Darklighter\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/0/00/BiggsHS-ANH.png/revision/latest?cb=20130305010406\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Obi-Wan Kenobi   \",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4e/ObiWanHS-SWE.jpg/revision/latest?cb=20111115052816\"\r\n    },\r\n\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n    let click = () => {\r\n        props.changeId(props.id);\r\n        props.changePhoto(props.photo);\r\n    }\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to=\"/info\">\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/charactersReducer'\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        \r\n        //idd: state.characters.id,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newId) => {\r\n            dispatch(changeId(newId));\r\n        },\r\n        changePhoto: (newPhoto) => {\r\n            dispatch(changePhoto(newPhoto));\r\n        }\r\n    }\r\n}\r\n\r\nconst ContentContainer = connect(mapStateToProps, mapDispatchToProps)(Content)\r\nexport default ContentContainer;","import React from 'react';\nimport './App.css';\nimport ProfileContainer from './components/ProfileContainer';\nimport {Route} from 'react-router-dom'\nimport Header from './components/Header.jsx'\nimport {characters} from './redux/characters'\nimport ContentContainer from './components/ContentContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Route exact path=\"/\"\n        render={(props) => characters.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>  \n      <Route path=\"/info\"\n        render={(props) => <ProfileContainer {...props}  />}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers} from \"redux\"\r\nimport charactersReducer from \"./charactersReducer\"\r\n\r\n\r\nlet reducers = combineReducers({\r\n    characters: charactersReducer\r\n})\r\n\r\nlet store = createStore(reducers)\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/reduxStore';\n\nReactDOM.render((\n<BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n        <App />\n    </Provider>\n</BrowserRouter>),\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}