{"version":3,"sources":["img/loadingGif.gif","img/sw.png","components/CharactersProfile.jsx","redux/api.js","redux/charactersReducer.js","components/CharactersProfileContainer.jsx","components/PlanetsProfile.jsx","redux/planetsReducer.js","components/PlanetsProfileContainer.jsx","components/FilmsProfile.jsx","redux/filmsReducer.js","components/FilmsProfileContainer.jsx","components/StarshipsProfile.jsx","redux/starshipsReducer.js","components/StarshipsProfileContainer.jsx","components/Header.jsx","redux/characters.js","redux/mainMenuOptions.js","redux/planets.js","redux/films.js","redux/starships.js","components/Content.jsx","redux/dataReducer.js","components/ContentContainer.jsx","components/MainMenu.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","CharactersProfile","name","id","getCharacterInfo","clearData","photo","height","mass","hairColor","gender","homeworld","useEffect","className","alt","src","loading","api","fetch","method","ref","initialState","getHomeworld","dispatch","then","response","text","data","JSON","parse","type","charactersReducer","state","action","CharactersProfileContainer","connect","profile","hair_color","setCharacter","PlanetsProfile","planetName","getPlanetInfo","rotation","climate","population","filmsTitlesArr","map","film","index","key","getFilms","films","filmsTitles","filmsUrl","results","i","length","includes","url","push","title","filmsArr","planetsReducer","PlanetsProfileContainer","planets","rotation_period","setPlanet","FilmsProfile","episodeId","getFilmInfo","director","releaseDate","charactersArr","ch","filmCharactersArr","getFilmCharacters","characters","charactersNames","charactersUrl","filmsReducer","episode_id","release_date","FilmsProfileContainer","setFilm","StarshipsProfile","starshipName","getStarshipInfo","manufacturer","cost","crew","passengers","starshipClass","starshipsReducer","StarshipsProfileContainer","starships","cost_in_credits","starship_class","setStarship","Header","to","logo","mainMenuOptions","Content","changeId","changePhoto","useState","isHidden","setIsHidden","link","onClick","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","dataReducer","ContentContainer","MainMenu","App","exact","path","render","props","m","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a8944b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.e4b6323e.gif\";","module.exports = __webpack_public_path__ + \"static/media/sw.b78faeed.png\";","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst CharactersProfile = ({name, id, getCharacterInfo, clearData, photo, height, mass, hairColor, gender, homeworld}) => {\r\n    useEffect(() => {\r\n        getCharacterInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={name} src={photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {name &&<p>Name: {name}</p>}\r\n                    {height &&<p>Height: {height}</p>}\r\n                    {mass &&<p>Mass: {mass}</p>}\r\n                    {hairColor &&<p>Hair Color: {hairColor}</p>}\r\n                    {gender &&<p>Gender: {gender}</p>}\r\n                    {homeworld \r\n                    ? <p>Homeworld: {homeworld}</p>\r\n                    : <img className=\"loading\" src={loading} />}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CharactersProfile","export const api = {\r\n    getCharacter(id) {\r\n        return fetch(`https://swapi.co/api/people/${id}`)\r\n    },\r\n    getPlanet(id) {\r\n        return fetch(`https://swapi.co/api/planets/${id}`,{method:\"POST\"})\r\n    },\r\n    getFilm(id) {\r\n        return fetch(`https://swapi.co/api/films/${id}`,{method: \"POST\"})\r\n    },\r\n    getStarship(id) {\r\n        return fetch(`https://swapi.co/api/starships/${id}`,{method: \"POST\"})\r\n    },\r\n    getRef(ref) {\r\n        return fetch(ref)\r\n    },\r\n}","import {api} from './api'\r\n\r\nconst SET_CHARACTER = \"SET_CHARACTER\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_HOMEWORLD = \"SET_HOMEWORLD\"\r\n\r\n\r\nconst initialState = {\r\n    name: null,\r\n    height: null,\r\n    mass: null,\r\n    hairColor: null,\r\n    gender: null,\r\n    homeworld: null,\r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CHARACTER: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                height: action.height,\r\n                mass: action.mass,\r\n                hairColor: action.hairColor,\r\n                gender: action.gender,\r\n            }\r\n        }\r\n        case SET_HOMEWORLD: {\r\n            return {\r\n                ...state, \r\n                homeworld: action.homeworld\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: null,\r\n                height: null,\r\n                mass: null,\r\n                hairColor: null,\r\n                gender: null,\r\n                homeworld: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setCharacter = (name,height,mass,hairColor,gender) => ({type: SET_CHARACTER, name,height,mass,hairColor,gender})\r\nconst setHomeworld = (homeworld) => ({type: SET_HOMEWORLD, homeworld})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getCharacterInfo = (id) => (dispatch) => {\r\n    api.getCharacter(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name, height, mass, hair_color, gender, homeworld} = JSON.parse(data);\r\n            dispatch(setCharacter(name, height, mass, hair_color, gender))\r\n            dispatch(getHomeworld(homeworld))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nconst getHomeworld = (ref) => (dispatch) => {\r\n    api.getRef(ref)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name} = JSON.parse(data);\r\n            dispatch(setHomeworld(name))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default charactersReducer;","import CharactersProfile from './CharactersProfile'\r\nimport {connect} from 'react-redux'\r\nimport {getCharacterInfo,clearData} from '../redux/charactersReducer'\r\n\r\nconst mapStateToProps = ({data, profile}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        name: profile.name,\r\n        height: profile.height,\r\n        mass: profile.mass,\r\n        gender: profile.gender,\r\n        hairColor: profile.hairColor,\r\n        homeworld: profile.homeworld,\r\n    }\r\n}\r\n\r\nconst CharactersProfileContainer = connect(mapStateToProps, {getCharacterInfo, clearData})(CharactersProfile)\r\nexport default CharactersProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst PlanetsProfile = ({planetName, photo, getPlanetInfo, id, clearData, rotation, climate, population, filmsTitlesArr}) => {\r\n    useEffect(() => {\r\n        getPlanetInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={planetName} src={photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {planetName &&<p>Name: {planetName}</p>}\r\n                    {rotation &&<p>Rotation period: {rotation}</p>}\r\n                    {climate &&<p>Climate: {climate}</p>}\r\n                    {population &&<p>Population: {population}</p>}\r\n                    {filmsTitlesArr ? <p><b>Films:</b></p> : <img className=\"loading\" src={loading} />}\r\n                    {filmsTitlesArr && filmsTitlesArr.map((film,index) => {return <p key={index}>{film}</p>})}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default PlanetsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_PLANET = \"SET_PLANET\"\r\nconst SET_FILMS_TITLES = \"SET_FILMS_TITLES\"\r\n\r\nconst initialState = {\r\n    planetName: null,\r\n    climate: null,\r\n    rotation: null,\r\n    population: null,\r\n    filmsTitlesArr: null,\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANET: {\r\n            return {\r\n                ...state, \r\n                planetName: action.planetName,\r\n                climate: action.climate,\r\n                rotation: action.rotation,\r\n                population: action.population\r\n            }\r\n        }\r\n        case SET_FILMS_TITLES: {\r\n            return {\r\n                ...state, \r\n                filmsTitlesArr: action.filmsArr\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                planetName: null,\r\n                climate: null,\r\n                rotation: null,\r\n                population: null,\r\n                filmsTitlesArr: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setPlanet = (planetName,rotation,climate,population) => ({type: SET_PLANET, planetName,rotation,climate,population})\r\nconst setFilmsTitles = (filmsArr) => ({type: SET_FILMS_TITLES, filmsArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getPlanetInfo = (id) => (dispatch) => {\r\n    api.getPlanet(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name,rotation_period,climate,population, films} = JSON.parse(data);\r\n            dispatch(setPlanet(name,rotation_period,climate,population))\r\n            dispatch(getFilms(films))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nconst getFilms = (films) => (dispatch) => {\r\n    let filmsTitles = []\r\n    let filmsUrl = []\r\n        api.getRef(`https://swapi.co/api/films`)\r\n        .then(response => {\r\n            response.text()\r\n            .then(data => {\r\n                const {results} = JSON.parse(data);\r\n                for (let i=0;i<results.length;i++) {\r\n                    if (films.includes(results[i].url)) {\r\n                        filmsUrl.push(results[i].url)\r\n                    }\r\n                }\r\n            }).then(() => {\r\n                for (let i =0;i<filmsUrl.length;i++) {\r\n                api.getRef(filmsUrl[i])\r\n                .then(response => {\r\n                    response.text()\r\n                    .then(data => {\r\n                        const {title} = JSON.parse(data);\r\n                        filmsTitles.push(title)\r\n                    })\r\n                    .then(() => {\r\n                        if (filmsTitles.length === filmsUrl.length) {\r\n                            dispatch(setFilmsTitles(filmsTitles))\r\n                        }\r\n                    })\r\n                })\r\n                }\r\n            })\r\n        }\r\n        )\r\n}\r\n\r\nexport default planetsReducer;","import PlanetsProfile from './PlanetsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getPlanetInfo} from '../redux/planetsReducer'\r\n\r\nconst mapStateToProps = ({data, planets}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        planetName: planets.planetName,\r\n        climate: planets.climate,\r\n        rotation: planets.rotation,\r\n        population: planets.population,\r\n        filmsTitlesArr: planets.filmsTitlesArr\r\n    }\r\n}\r\n\r\nconst PlanetsProfileContainer = connect(mapStateToProps,{getPlanetInfo, clearData})(PlanetsProfile)\r\nexport default PlanetsProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst FilmsProfile = ({title, id, photo, episodeId, getFilmInfo, clearData, director, releaseDate, charactersArr}) => {\r\n    useEffect(() => {\r\n        getFilmInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={title} src={photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {title &&<p>Title: {title}</p>}\r\n                    {episodeId &&<p>Episode №: {episodeId}</p>}\r\n                    {director &&<p>Director: {director}</p>}\r\n                    {releaseDate && <p>Release Data: {releaseDate}</p>}\r\n                    {charactersArr ? <p><b>Characters:</b></p> : <img className=\"loading\" src={loading} />}\r\n                    {charactersArr && charactersArr.map((ch,index) => {return <p key={index}>{ch}</p>})}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default FilmsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_FILM = \"SET_FILM\"\r\nconst SET_FILM_CHARACTERS = \"SET_FILM_CHARACTERS\"\r\n\r\nconst initialState = {\r\n    title: null,\r\n    episodeId: null,\r\n    director: null,\r\n    releaseDate: null,\r\n    filmCharactersArr: null\r\n}\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILM: {\r\n            return {\r\n                ...state, \r\n                title: action.title,\r\n                episodeId: action.episode_id,\r\n                director: action.director,\r\n                releaseDate: action.release_date\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                title: null,\r\n                episodeId: null,\r\n                director: null,\r\n                releaseDate: null,\r\n                filmCharactersArr: null\r\n            }\r\n        }\r\n        case SET_FILM_CHARACTERS: {\r\n            return {\r\n                ...state, \r\n                filmCharactersArr: action.charactersArr\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setFilm = (title,episode_id,director,release_date) => ({type: SET_FILM, title,episode_id,director,release_date})\r\nconst setFilmCharacters = (charactersArr) => ({type: SET_FILM_CHARACTERS, charactersArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getFilmInfo = (id) => (dispatch) => {\r\n    api.getFilm(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {title, episode_id, director, release_date, characters} = JSON.parse(data);\r\n            dispatch(setFilm(title, episode_id, director, release_date))\r\n            dispatch(getFilmCharacters(characters))\r\n        })\r\n    }\r\n    )\r\n}\r\nconst getFilmCharacters = (characters) =>  (dispatch) => {\r\n    const charactersNames = []\r\n    const charactersUrl = []\r\n        api.getRef(`https://swapi.co/api/people`)\r\n        .then(response => {\r\n            response.text()\r\n            .then(data => {\r\n                const {results} = JSON.parse(data);\r\n                for (let i=0;i<results.length;i++) {\r\n                    if (characters.includes(results[i].url)) {\r\n                        charactersUrl.push(results[i].url)\r\n                    }\r\n                }\r\n            }).then(() => {\r\n                for (let i =0;i<charactersUrl.length;i++) {\r\n                api.getRef(charactersUrl[i])\r\n                .then(response => {\r\n                    response.text()\r\n                    .then(data => {\r\n                        const {name} = JSON.parse(data);\r\n                        charactersNames.push(name)\r\n                    })\r\n                    .then(() => {\r\n                        if (charactersNames.length === charactersUrl.length) {\r\n                            dispatch(setFilmCharacters(charactersNames))\r\n                        }\r\n                    })\r\n                })\r\n                }\r\n            }) \r\n        }\r\n        )\r\n}\r\n\r\n\r\nexport default filmsReducer;","import FilmsProfile from './FilmsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {getFilmInfo,clearData} from '../redux/filmsReducer'\r\n\r\nconst mapStateToProps = ({data, films}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        title: films.title,\r\n        episodeId: films.episodeId,\r\n        director: films.director,\r\n        releaseDate: films.releaseDate,\r\n        charactersArr: films.filmCharactersArr\r\n        \r\n    }\r\n}\r\n\r\nconst FilmsProfileContainer = connect(mapStateToProps, {getFilmInfo, clearData})(FilmsProfile)\r\nexport default FilmsProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nconst StarshipsProfile = ({starshipName, getStarshipInfo, clearData, id, photo, manufacturer, cost, crew, passengers, starshipClass }) => {\r\n    useEffect(() => {\r\n        getStarshipInfo(id)\r\n    \r\n        return function willUnmount() {\r\n            clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={starshipName} src={photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {starshipName ? <p>Name: {starshipName}</p> : <img className=\"loading\" src={loading} />}\r\n                    {manufacturer &&<p>Manufacturer: {manufacturer}</p>}\r\n                    {cost &&<p>Cost: {cost}</p>}\r\n                    {crew &&<p>Crew: {crew}</p>}\r\n                    {passengers &&<p>Passengers: {passengers}</p>}\r\n                    {starshipClass &&<p>Starship class: {starshipClass}</p>}\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default StarshipsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_STARSHIP = \"SET_STARSHIP\"\r\n\r\nconst initialState = {\r\n    starshipName: null,\r\n    manufacturer: null,\r\n    cost: null,\r\n    crew: null,\r\n    passengers: null,\r\n    starshipClass: null,\r\n        \r\n}\r\n\r\nconst starshipsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STARSHIP: {\r\n            return {\r\n                ...state, \r\n                starshipName: action.starshipName,\r\n                manufacturer: action.manufacturer,\r\n                cost: action.cost,\r\n                crew: action.crew,\r\n                passengers: action.passengers,\r\n                starshipClass: action.starshipClass,\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                starshipName: null,\r\n                manufacturer: null,\r\n                cost: null,\r\n                crew: null,\r\n                passengers: null,\r\n                starshipClass: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setStarship = (starshipName,manufacturer,cost,crew,passengers,starshipClass) => ({type: SET_STARSHIP, starshipName,manufacturer,cost,crew,passengers,starshipClass})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getStarshipInfo = (id) => (dispatch) => {\r\n    api.getStarship(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            const {name,manufacturer,cost_in_credits,crew,passengers,starship_class} = JSON.parse(data);\r\n            dispatch(setStarship(name,manufacturer,cost_in_credits,crew,passengers,starship_class))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default starshipsReducer;","import StarshipsProfile from './StarshipsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getStarshipInfo} from '../redux/starshipsReducer'\r\n\r\nconst mapStateToProps = ({data, starships}) => {\r\n    return {\r\n        id: data.id,\r\n        photo: data.photo,\r\n        starshipName: starships.starshipName,\r\n        manufacturer: starships.manufacturer,\r\n        cost: starships.cost,\r\n        crew: starships.crew,\r\n        passengers: starships.passengers,\r\n        starshipClass: starships.starshipClass\r\n    }\r\n    \r\n}\r\n\r\nconst StarshipsProfileContainer = connect(mapStateToProps, {clearData, getStarshipInfo})(StarshipsProfile)\r\nexport default StarshipsProfileContainer;","import React from 'react'\r\nimport logo from '../img/sw.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"swLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header","export const characters = [\r\n    {\r\n        id: 1,\r\n        name: \"Luke Skywalker\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"C-3PO\",\r\n        photo: \"https://images.immediate.co.uk/production/volatile/sites/3/2019/10/EP9-FF-001686-336e75b.jpg?quality=90&resize=620,413\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"R2-D2\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/1/1a/R2d2.jpg/revision/latest/scale-to-width-down/500?cb=20120924084739\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Darth Vader\",\r\n        photo: \"https://cdn1us.denofgeek.com/sites/denofgeekus/files/vader-main.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Leia Organa\",\r\n        photo: \"https://am22.akamaized.net/tms/cnt/uploads/2017/08/leiatop1-650x574.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Owen Lars\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/e/eb/OwenCardTrader.png/revision/latest?cb=20171108050140\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beru Whitesun Lars\",\r\n        photo: \"https://i.imgur.com/hMBCi5x.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"R5-D4\",\r\n        photo: \"https://cdn11.bigcommerce.com/s-0kvv9/images/stencil/1280x1280/products/159139/222171/apifmy1pb__62136.1493318333.jpg?c=2&imbypass=on\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Biggs Darklighter\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/0/00/BiggsHS-ANH.png/revision/latest?cb=20130305010406\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Obi-Wan Kenobi\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4e/ObiWanHS-SWE.jpg/revision/latest?cb=20111115052816\"\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Anakin Skywalker\",\r\n        photo: \"https://townsquare.media/site/442/files/2015/12/anakin-force-ghost-star-wars-pic.jpg?w=980&q=75\"\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Wilhuff Tarkin\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/c/c1/Tarkininfobox.jpg/revision/latest?cb=20100620213033\"\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"Chewbacca\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/48/Chewbacca_TLJ.png/revision/latest?cb=20190830144754\"\r\n    },\r\n    {\r\n        id: 14,\r\n        name: \"Han Solo\",\r\n        photo: \"https://pbs.twimg.com/profile_images/952120658955182080/9ZXXTkOH.jpg\"\r\n    },\r\n    {\r\n        id: 15,\r\n        name: \"Greedo\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/c/c6/Greedo.jpg/revision/latest?cb=20180209034210\"\r\n    },\r\n\r\n]","export const mainMenuOptions = [\r\n    {\r\n        id: 1,\r\n        name: \"Characters\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Planets\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Films\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/91H91NbI2xL._SL1500_.jpg\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Starships\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/47/Rebels-TantiveIVConceptArt-CroppedBackground.png/revision/latest?cb=20150215073634\"\r\n    },\r\n]","export const planets = [\r\n    {\r\n        id: 1,\r\n        name: \"Tatooine\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Alderaan\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4a/Alderaan.jpg/revision/latest?cb=20061211013805\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Yavin IV\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/d/d4/Yavin-4-SWCT.png/revision/latest?cb=20181015023938\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Hoth\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/1d/Hoth_SWCT.png/revision/latest?cb=20160630022322\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Dagobah\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/4/43/%D0%9F%D0%BB%D0%B0%D0%BD%D0%B5%D1%82%D0%B0_%D0%94%D0%B0%D0%B3%D0%BE%D0%B1%D0%B0.jpg/revision/latest?cb=20090310212450\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Bespin\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/11/Bespin-SWCT.png/revision/latest?cb=20181010054421\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Endor\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/1d/Endor_BF2.png/revision/latest?cb=20171014232605\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"Naboo\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/41/Naboo_FFGRebellion.png/revision/latest?cb=20170529051916\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Coruscant\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/16/Coruscant-EotE.jpg/revision/latest?cb=20130908205521\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Kamino\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/a/a9/Eaw_Kamino.jpg/revision/latest?cb=20090527045541\"\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Geonosis\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/6/6d/Geonosis_AotC.png/revision/latest?cb=20121231120327\"\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"Utapau\",\r\n        photo: \"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/2dee0018-9712-4233-8c23-0392f5f2eeaa/dcw6xv-60dbe2e4-266a-47ed-8621-7d32046308fc.jpg/v1/fill/w_800,h_800,q_75,strp/utapau__dentists_needed_by_anstrona_dcw6xv-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9ODAwIiwicGF0aCI6IlwvZlwvMmRlZTAwMTgtOTcxMi00MjMzLThjMjMtMDM5MmY1ZjJlZWFhXC9kY3c2eHYtNjBkYmUyZTQtMjY2YS00N2VkLTg2MjEtN2QzMjA0NjMwOGZjLmpwZyIsIndpZHRoIjoiPD04MDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.WWgFH76-OTyTOsmuLC2M0AR1BXhFaYme2RPblK3ehTA\"\r\n    },\r\n\r\n]","export const films = [\r\n    {\r\n        id: 1,\r\n        name: \"A New Hope\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"The Empire Strikes Back\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BYmU1NDRjNDgtMzhiMi00NjZmLTg5NGItZDNiZjU5NTU4OTE0XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Return of the Jedi\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"The Phantom Menace\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/2FBC8CE938F5498156EAC7CC360A462CCF1BF88D62FBFE4359C8A4C771173886\"\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Attack of the Clones\",\r\n        photo: \"https://img08.mgo-images.com/image/thumbnail?id=MMVAF9757360A18D049CADC51FA6B5B25F8D&ql=70&sizes=310x465\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Revenge of the Sith\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/277134346F37706DA1B69EA4667370305DC38C997EC5CAAE030F80FF85BBA463\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"The Force Awakens\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_.jpg\"\r\n    },\r\n]","export const starships = [\r\n    {\r\n        id: 2,\r\n        name: \"CR90 corvette\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/47/Rebels-TantiveIVConceptArt-CroppedBackground.png/revision/latest?cb=20150215073634\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Star Destroyer\",\r\n        photo: \"https://www.madhouse.it/files/Madhouse_Files/Foto/56627_385038.JPG\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Sentinel-class landing craft\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/6/6e/Sentinel_negvv.png/revision/latest?cb=20170411232732\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Death Star\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/0/0f/Death_Stari.jpg/revision/latest?cb=20150601131320\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Millennium Falcon\",\r\n        photo: \"https://herocity.de/mg/wp-content/uploads/2018/10/x_ban01206-800x450.jpg\"\r\n    },\r\n    {\r\n        id: 11,\r\n        name: \"Y-wing\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/9/90/YWing_NEGVV.png/revision/latest?cb=20180304145056\"\r\n    },\r\n    {\r\n        id: 12,\r\n        name: \"X-wing\",\r\n        photo: \"https://static.turbosquid.com/Preview/2015/12/10__08_21_07/StarWarsXWingStarfighterRed3dmodel01.jpgc7e47cbf-227e-42be-a462-9ae7ae5bcdffZoom.jpg\"\r\n    },\r\n    {\r\n        id: 13,\r\n        name: \"TIE Advanced x1\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/1d/Vader_TIEAdvanced_SWB.png/revision/latest?cb=20160915042032\"\r\n    },\r\n    {\r\n        id: 15,\r\n        name: \"Executor\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/3/30/Executor_BF2.png/revision/latest?cb=20180903230846\"\r\n    },\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = ({changeId, id, changePhoto, photo, type, name}) => {\r\n    const [isHidden, setIsHidden] = useState(true)\r\n    const click = () => {\r\n        changeId(id);\r\n        changePhoto(photo);\r\n    }\r\n    const textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    const textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    const link = `${type}/info`\r\n        return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={link}>\r\n                <img className=\"transform\" alt={name} src={photo} id={id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nconst initialState = {\r\n    id: null,\r\n    photo: null\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default dataReducer;","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/dataReducer'\r\n\r\nconst ContentContainer = connect(null, {changeId, changePhoto})(Content)\r\nexport default ContentContainer;","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\nconst MainMenu = ({name, photo, id}) => {\r\n    const [isHidden, setIsHidden] = useState(true)\r\n\r\n    const textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    const textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={name}>\r\n                <img className=\"transform\" alt={name} src={photo} id={id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu","import React from 'react';\r\nimport './App.css';\r\nimport CharactersProfileContainer from './components/CharactersProfileContainer';\r\nimport PlanetsProfileContainer  from './components/PlanetsProfileContainer';\r\nimport FilmsProfileContainer  from './components/FilmsProfileContainer';\r\nimport StarshipsProfileContainer  from './components/StarshipsProfileContainer';\r\nimport {Route} from 'react-router-dom'\r\nimport Header from './components/Header.jsx'\r\nimport {characters} from './redux/characters'\r\nimport {mainMenuOptions} from './redux/mainMenuOptions'\r\nimport {planets} from './redux/planets'\r\nimport {films} from './redux/films'\r\nimport {starships} from './redux/starships'\r\nimport ContentContainer from './components/ContentContainer'\r\nimport MainMenu from './components/MainMenu'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path=\"/Characters\"\r\n        render={(props) => characters.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Characters\"}/>)}/>  \r\n      <Route exact path=\"/Characters/info\"\r\n        render={(props) => <CharactersProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets/info\"\r\n        render={(props) => <PlanetsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Films/info\"\r\n        render={(props) => <FilmsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Starships/info\"\r\n        render={(props) => <StarshipsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets\"\r\n        render={(props) => planets.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Planets\"}/>)}/>\r\n      <Route exact path=\"/Films\"\r\n        render={(props) => films.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Films\"}/>)}/>\r\n      <Route exact path=\"/Starships\"\r\n        render={(props) => starships.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Starships\"}/>)}/>\r\n      <Route exact path=\"/\"\r\n        render={(props) => mainMenuOptions.map(m => <MainMenu {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport dataReducer from \"./dataReducer\"\r\nimport charactersReducer from \"./charactersReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport planetsReducer from \"./planetsReducer\";\r\nimport filmsReducer from \"./filmsReducer\";\r\nimport starshipsReducer from \"./starshipsReducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    data: dataReducer,\r\n    profile: charactersReducer,\r\n    planets: planetsReducer,\r\n    films: filmsReducer,\r\n    starships: starshipsReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render((\r\n<Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </BrowserRouter>\r\n</Provider>),\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}