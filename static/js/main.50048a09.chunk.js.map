{"version":3,"sources":["img/loadingGif.gif","img/sw.png","components/CharactersProfile.jsx","redux/api.js","redux/charactersReducer.js","components/CharactersProfileContainer.jsx","components/PlanetsProfile.jsx","redux/planetsReducer.js","components/PlanetsProfileContainer.jsx","components/FilmsProfile.jsx","redux/filmsReducer.js","components/FilmsProfileContainer.jsx","components/StarshipsProfile.jsx","redux/starshipsReducer.js","components/StarshipsProfileContainer.jsx","components/Header.jsx","redux/characters.js","redux/mainMenuOptions.js","redux/planets.js","redux/films.js","redux/starships.js","components/Content.jsx","redux/dataReducer.js","components/ContentContainer.jsx","components/MainMenu.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","CharactersProfile","props","useEffect","getCharacterInfo","id","clearData","className","alt","name","src","photo","height","mass","hairColor","gender","homeworld","loading","api","fetch","ref","method","initialState","getHomeworld","dispatch","then","response","text","data","json","JSON","parse","type","charactersReducer","state","action","CharactersProfileContainer","connect","profile","hair_color","PlanetsProfile","getPlanetInfo","planetName","rotation","climate","population","filmsTitlesArr","map","film","index","key","getFilms","films","filmsTitles","filmsUrl","i","results","length","includes","url","push","title","filmsArr","planetsReducer","PlanetsProfileContainer","planets","rotation_period","FilmsProfile","getFilmInfo","episodeId","director","releaseDate","filmsReducer","episode_id","release_date","FilmsProfileContainer","StarshipsProfile","getStarshipInfo","starshipName","manufacturer","cost","crew","passengers","starshipClass","starshipsReducer","StarshipsProfileContainer","starships","cost_in_credits","starship_class","Header","to","logo","characters","mainMenuOptions","Content","useState","isHidden","setIsHidden","link","onClick","changeId","changePhoto","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","dataReducer","ContentContainer","newId","newPhoto","MainMenu","App","exact","path","render","m","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50048a09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingGif.e4b6323e.gif\";","module.exports = __webpack_public_path__ + \"static/media/sw.b78faeed.png\";","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\n\r\nlet CharactersProfile = (props) => {\r\n    useEffect(() => {\r\n        props.getCharacterInfo(props.id)\r\n    \r\n        return function willUnmount() {\r\n            props.clearData()\r\n        };\r\n      },[]);\r\n\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={props.name} src={props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {props.name &&<p>Name: {props.name}</p>}\r\n                    {props.height &&<p>Height: {props.height}</p>}\r\n                    {props.mass &&<p>Mass: {props.mass}</p>}\r\n                    {props.hairColor &&<p>Hair Color: {props.hairColor}</p>}\r\n                    {props.gender &&<p>Gender: {props.gender}</p>}\r\n                    {props.homeworld \r\n                    ? <p>Homeworld: {props.homeworld}</p>\r\n                    : <img className=\"loading\" src={loading} />}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default CharactersProfile","export const api = {\r\n    get(id) {\r\n        return fetch(`https://swapi.co/api/people/${id}`)\r\n    },\r\n    getRef(ref) {\r\n        return fetch(ref)\r\n    },\r\n    getPlanet(id) {\r\n        return fetch(`https://swapi.co/api/planets/${id}`,{method:\"POST\"})\r\n    },\r\n    getFilm(id) {\r\n        return fetch(`https://swapi.co/api/films/${id}`,{method: \"POST\"})\r\n    },\r\n    getStarship(id) {\r\n        return fetch(`https://swapi.co/api/starships/${id}`,{method: \"POST\"})\r\n    },\r\n}","import {api} from './api'\r\n\r\nconst SET_CHARACTER = \"SET_CHARACTER\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_HOMEWORLD = \"SET_HOMEWORLD\"\r\n\r\n\r\nlet initialState = {\r\n    name: null,\r\n    height: null,\r\n    mass: null,\r\n    hairColor: null,\r\n    gender: null,\r\n    homeworld: null,\r\n    \r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CHARACTER: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                height: action.height,\r\n                mass: action.mass,\r\n                hairColor: action.hairColor,\r\n                gender: action.gender,\r\n            }\r\n        }\r\n        case SET_HOMEWORLD: {\r\n            return {\r\n                ...state, \r\n                homeworld: action.homeworld\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: null,\r\n                height: null,\r\n                mass: null,\r\n                hairColor: null,\r\n                gender: null,\r\n                homeworld: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCharacter = (name,height,mass,hairColor,gender) => ({type: SET_CHARACTER, name,height,mass,hairColor,gender})\r\nexport const setHomeworld = (homeworld) => ({type: SET_HOMEWORLD, homeworld})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getCharacterInfo = (id) => (dispatch) => {\r\n    api.get(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setCharacter(json.name,json.height,json.mass,json.hair_color,json.gender))\r\n            dispatch(getHomeworld(json.homeworld))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport const getHomeworld = (id) => (dispatch) => {\r\n    api.getRef(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setHomeworld(json.name))\r\n            \r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default charactersReducer;","import CharactersProfile from './CharactersProfile'\r\nimport {connect} from 'react-redux'\r\nimport {getCharacterInfo,clearData} from '../redux/charactersReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        name: state.profile.name,\r\n        height: state.profile.height,\r\n        mass: state.profile.mass,\r\n        gender: state.profile.gender,\r\n        hairColor: state.profile.hairColor,\r\n        homeworld: state.profile.homeworld,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCharacterInfo: (id) => {\r\n            dispatch(getCharacterInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData());\r\n        },\r\n    }\r\n}\r\n\r\nconst CharactersProfileContainer = connect(mapStateToProps, mapDispatchToProps)(CharactersProfile)\r\nexport default CharactersProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nlet  PlanetsProfile = (props) => {\r\n    useEffect(() => {\r\n        props.getPlanetInfo(props.id)\r\n    \r\n        return function willUnmount() {\r\n            props.clearData()\r\n        };\r\n      },[]);\r\n\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={props.planetName} src={props.photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {props.planetName &&<p>Name: {props.planetName}</p>}\r\n                    {props.rotation &&<p>Rotation period: {props.rotation}</p>}\r\n                    {props.climate &&<p>Climate: {props.climate}</p>}\r\n                    {props.population &&<p>Population: {props.population}</p>}\r\n                    {props.filmsTitlesArr ? <p><b>Films:</b></p> : <img className=\"loading\" src={loading} />}\r\n                    {props.filmsTitlesArr && props.filmsTitlesArr.map((film,index) => {return <p key={index}>{film}</p>})}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default PlanetsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_PLANET = \"SET_PLANET\"\r\nconst SET_FILMS_TITLES = \"SET_FILMS_TITLES\"\r\n\r\nlet initialState = {\r\n    planetName: null,\r\n    climate: null,\r\n    rotation: null,\r\n    population: null,\r\n    filmsTitlesArr: null,\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANET: {\r\n            return {\r\n                ...state, \r\n                planetName: action.planetName,\r\n                climate: action.climate,\r\n                rotation: action.rotation,\r\n                population: action.population\r\n            }\r\n        }\r\n        case SET_FILMS_TITLES: {\r\n            return {\r\n                ...state, \r\n                filmsTitlesArr: action.filmsArr\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                planetName: null,\r\n                climate: null,\r\n                rotation: null,\r\n                population: null,\r\n                filmsTitlesArr: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPlanet = (planetName,rotation,climate,population) => ({type: SET_PLANET, planetName,rotation,climate,population})\r\nexport const setFilmsTitles = (filmsArr) => ({type: SET_FILMS_TITLES, filmsArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getPlanetInfo = (id) => (dispatch) => {\r\n    api.getPlanet(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setPlanet(json.name,json.rotation_period,json.climate,json.population))\r\n            dispatch(getFilms(json.films))\r\n            \r\n\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport const getFilms = (films) =>  (dispatch) => {\r\n    let filmsTitles = []\r\n    let filmsUrl = []\r\n        api.getRef(`https://swapi.co/api/films`)\r\n        .then(response => {\r\n            response.text()\r\n            .then(data => {\r\n                let json = JSON.parse(data);\r\n                for (let i=0;i<json.results.length;i++) {\r\n                    if (films.includes(json.results[i].url)) {\r\n                        filmsUrl.push(json.results[i].url)\r\n                        \r\n                    }\r\n                }\r\n            }).then(() => {\r\n                for (let i =0;i<filmsUrl.length;i++) {\r\n                api.getRef(filmsUrl[i])\r\n                .then(response => {\r\n                    response.text()\r\n                    .then(data => {\r\n                        let json = JSON.parse(data);\r\n                        filmsTitles.push(json.title)\r\n                    })\r\n                    .then(() => {\r\n                        if (filmsTitles.length === filmsUrl.length) {\r\n                            dispatch(setFilmsTitles(filmsTitles))\r\n                        }\r\n                    })\r\n                })\r\n                }\r\n            })\r\n        }\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default planetsReducer;","import PlanetsProfile from './PlanetsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getPlanetInfo} from '../redux/planetsReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        planetName: state.planets.planetName,\r\n        climate: state.planets.climate,\r\n        rotation: state.planets.rotation,\r\n        population: state.planets.population,\r\n        filmsTitlesArr: state.planets.filmsTitlesArr\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPlanetInfo: (id) => {\r\n            dispatch(getPlanetInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData())\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst PlanetsProfileContainer = connect(mapStateToProps, mapDispatchToProps)(PlanetsProfile)\r\nexport default PlanetsProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nlet FilmsProfile = (props) => {\r\n    /* componentDidMount() {\r\n        this.props.getFilmInfo(this.props.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData()\r\n    } */\r\n    useEffect(() => {\r\n        props.getFilmInfo(props.id)\r\n    \r\n        return function willUnmount() {\r\n            props.clearData()\r\n        };\r\n      },[]);\r\n\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={props.title} src={props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {props.title ? <p>Title: {props.title}</p> : <img className=\"loading\" src={loading} />}\r\n                    {props.episodeId &&<p>Episode №: {props.episodeId}</p>}\r\n                    {props.director &&<p>Director: {props.director}</p>}\r\n                    {props.releaseDate && <p>Release Data: {props.releaseDate}</p>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default FilmsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_FILM = \"SET_FILM\"\r\n\r\nlet initialState = {\r\n    title: null,\r\n    episodeId: null,\r\n    director: null,\r\n    releaseDate: null\r\n}\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILM: {\r\n            return {\r\n                ...state, \r\n                title: action.title,\r\n                episodeId: action.episode_id,\r\n                director: action.director,\r\n                releaseDate: action.release_date\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                title: null,\r\n                episodeId: null,\r\n                director: null,\r\n                releaseDate: null\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFilm = (title,episode_id,director,release_date) => ({type: SET_FILM, title,episode_id,director,release_date})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getFilmInfo = (id) => (dispatch) => {\r\n    api.getFilm(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setFilm(json.title,json.episode_id,json.director,json.release_date))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\n\r\nexport default filmsReducer;","import FilmsProfile from './FilmsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {getFilmInfo,clearData} from '../redux/filmsReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        title: state.films.title,\r\n        episodeId: state.films.episodeId,\r\n        director: state.films.director,\r\n        releaseDate: state.films.releaseDate,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getFilmInfo: (id) => {\r\n            dispatch(getFilmInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData());\r\n        },\r\n    }\r\n}\r\n\r\nconst FilmsProfileContainer = connect(mapStateToProps, mapDispatchToProps)(FilmsProfile)\r\nexport default FilmsProfileContainer;","import React,{useEffect} from 'react'\r\nimport loading from '../img/loadingGif.gif'\r\n\r\nlet StarshipsProfile = (props) => {\r\n    useEffect(() => {\r\n        props.getStarshipInfo(props.id)\r\n    \r\n        return function willUnmount() {\r\n            props.clearData()\r\n        };\r\n      },[]);\r\n\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={props.starshipName} src={props.photo} />\r\n                </div>\r\n                \r\n                <div className=\"characterInfo\">\r\n                    {props.starshipName ? <p>Name: {props.starshipName}</p> : <img className=\"loading\" src={loading} />}\r\n                    {props.manufacturer &&<p>Manufacturer: {props.manufacturer}</p>}\r\n                    {props.cost &&<p>Cost: {props.cost}</p>}\r\n                    {props.crew &&<p>Crew: {props.crew}</p>}\r\n                    {props.passengers &&<p>Passengers: {props.passengers}</p>}\r\n                    {props.starshipClass &&<p>Starship class: {props.starshipClass}</p>}\r\n                   \r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n\r\nexport default StarshipsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_STARSHIP = \"SET_STARSHIP\"\r\n\r\nlet initialState = {\r\n    starshipName: null,\r\n    manufacturer: null,\r\n    cost: null,\r\n    crew: null,\r\n    passengers: null,\r\n    starshipClass: null,\r\n        \r\n}\r\n\r\nconst starshipsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STARSHIP: {\r\n            return {\r\n                ...state, \r\n                starshipName: action.starshipName,\r\n                manufacturer: action.manufacturer,\r\n                cost: action.cost,\r\n                crew: action.crew,\r\n                passengers: action.passengers,\r\n                starshipClass: action.starshipClass,\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                planetName: null,\r\n                climate: null,\r\n                rotation: null,\r\n                population: null,\r\n                filmsTitlesArr: null,\r\n                starshipName: null,\r\n                manufacturer: null,\r\n                cost: null,\r\n                crew: null,\r\n                passengers: null,\r\n                starshipClass: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setStarship = (starshipName,manufacturer,cost,crew,passengers,starshipClass) => ({type: SET_STARSHIP, starshipName,manufacturer,cost,crew,passengers,starshipClass})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getStarshipInfo = (id) => (dispatch) => {\r\n    api.getStarship(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setStarship(json.name,json.manufacturer,json.cost_in_credits,json.crew,json.passengers,json.starship_class))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default starshipsReducer;","import StarshipsProfile from './StarshipsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getStarshipInfo} from '../redux/starshipsReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        starshipName: state.starships.starshipName,\r\n        manufacturer: state.starships.manufacturer,\r\n        cost: state.starships.cost,\r\n        crew: state.starships.crew,\r\n        passengers: state.starships.passengers,\r\n        starshipClass: state.starships.starshipClass\r\n    }\r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearData: () => {\r\n            dispatch(clearData())\r\n        },\r\n        getStarshipInfo: (id) => {\r\n            dispatch(getStarshipInfo(id))\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst StarshipsProfileContainer = connect(mapStateToProps, mapDispatchToProps)(StarshipsProfile)\r\nexport default StarshipsProfileContainer;","import React from 'react'\r\nimport logo from '../img/sw.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"swLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Header","export const characters = [\r\n    {\r\n        id: 1,\r\n        name: \"Luke Skywalker\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"C-3PO\",\r\n        photo: \"https://images.immediate.co.uk/production/volatile/sites/3/2019/10/EP9-FF-001686-336e75b.jpg?quality=90&resize=620,413\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"R2-D2\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/1/1a/R2d2.jpg/revision/latest/scale-to-width-down/500?cb=20120924084739\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Darth Vader\",\r\n        photo: \"https://cdn1us.denofgeek.com/sites/denofgeekus/files/vader-main.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Leia Organa\",\r\n        photo: \"https://am22.akamaized.net/tms/cnt/uploads/2017/08/leiatop1-650x574.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Owen Lars\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/e/eb/OwenCardTrader.png/revision/latest?cb=20171108050140\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beru Whitesun Lars\",\r\n        photo: \"https://i.imgur.com/hMBCi5x.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"R5-D4\",\r\n        photo: \"https://cdn11.bigcommerce.com/s-0kvv9/images/stencil/1280x1280/products/159139/222171/apifmy1pb__62136.1493318333.jpg?c=2&imbypass=on\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Biggs Darklighter\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/0/00/BiggsHS-ANH.png/revision/latest?cb=20130305010406\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Obi-Wan Kenobi   \",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4e/ObiWanHS-SWE.jpg/revision/latest?cb=20111115052816\"\r\n    },\r\n\r\n]","export const mainMenuOptions = [\r\n    {\r\n        id: 1,\r\n        name: \"Characters\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Planets\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Films\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/91H91NbI2xL._SL1500_.jpg\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Starships\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/47/Rebels-TantiveIVConceptArt-CroppedBackground.png/revision/latest?cb=20150215073634\"\r\n    },\r\n]","export const planets = [\r\n    {\r\n        id: 1,\r\n        name: \"Tatooine\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Alderaan\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4a/Alderaan.jpg/revision/latest?cb=20061211013805\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Yavin IV\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/d/d4/Yavin-4-SWCT.png/revision/latest?cb=20181015023938\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Hoth\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/1d/Hoth_SWCT.png/revision/latest?cb=20160630022322\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Dagobah\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/4/43/%D0%9F%D0%BB%D0%B0%D0%BD%D0%B5%D1%82%D0%B0_%D0%94%D0%B0%D0%B3%D0%BE%D0%B1%D0%B0.jpg/revision/latest?cb=20090310212450\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Bespin\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/11/Bespin-SWCT.png/revision/latest?cb=20181010054421\"\r\n    },\r\n\r\n]","export const films = [\r\n    {\r\n        id: 1,\r\n        name: \"A New Hope\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"The Empire Strikes Back\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BYmU1NDRjNDgtMzhiMi00NjZmLTg5NGItZDNiZjU5NTU4OTE0XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Return of the Jedi\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"The Phantom Menace\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/2FBC8CE938F5498156EAC7CC360A462CCF1BF88D62FBFE4359C8A4C771173886\"\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Attack of the Clones\",\r\n        photo: \"https://img08.mgo-images.com/image/thumbnail?id=MMVAF9757360A18D049CADC51FA6B5B25F8D&ql=70&sizes=310x465\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Revenge of the Sith\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/277134346F37706DA1B69EA4667370305DC38C997EC5CAAE030F80FF85BBA463\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"The Force Awakens\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_.jpg\"\r\n    },\r\n]","export const starships = [\r\n    {\r\n        id: 2,\r\n        name: \"CR90 corvette\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/47/Rebels-TantiveIVConceptArt-CroppedBackground.png/revision/latest?cb=20150215073634\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Star Destroyer\",\r\n        photo: \"https://www.madhouse.it/files/Madhouse_Files/Foto/56627_385038.JPG\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Sentinel-class landing craft\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/6/6e/Sentinel_negvv.png/revision/latest?cb=20170411232732\"\r\n    },\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n    let click = () => {\r\n        props.changeId(props.id);\r\n        props.changePhoto(props.photo);\r\n    }\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    const link = `${props.type}/info`\r\n        return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={link}>\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nlet initialState = {\r\n    id: \"\",\r\n    photo: \"\"\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default dataReducer;","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/dataReducer'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newId) => {\r\n            dispatch(changeId(newId));\r\n        },\r\n        changePhoto: (newPhoto) => {\r\n            dispatch(changePhoto(newPhoto));\r\n        }\r\n    }\r\n}\r\n\r\nconst ContentContainer = connect(null, mapDispatchToProps)(Content)\r\nexport default ContentContainer;","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst MainMenu = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={props.name}>\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu","import React from 'react';\r\nimport './App.css';\r\nimport CharactersProfileContainer from './components/CharactersProfileContainer';\r\nimport PlanetsProfileContainer  from './components/PlanetsProfileContainer';\r\nimport FilmsProfileContainer  from './components/FilmsProfileContainer';\r\nimport StarshipsProfileContainer  from './components/StarshipsProfileContainer';\r\nimport {Route} from 'react-router-dom'\r\nimport Header from './components/Header.jsx'\r\nimport {characters} from './redux/characters'\r\nimport {mainMenuOptions} from './redux/mainMenuOptions'\r\nimport {planets} from './redux/planets'\r\nimport {films} from './redux/films'\r\nimport {starships} from './redux/starships'\r\nimport ContentContainer from './components/ContentContainer'\r\nimport MainMenu from './components/MainMenu'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path=\"/Characters\"\r\n        render={(props) => characters.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Characters\"}/>)}/>  \r\n      <Route exact path=\"/Characters/info\"\r\n        render={(props) => <CharactersProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets/info\"\r\n        render={(props) => <PlanetsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Films/info\"\r\n        render={(props) => <FilmsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Starships/info\"\r\n        render={(props) => <StarshipsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets\"\r\n        render={(props) => planets.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Planets\"}/>)}/>\r\n      <Route exact path=\"/Films\"\r\n        render={(props) => films.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Films\"}/>)}/>\r\n      <Route exact path=\"/Starships\"\r\n        render={(props) => starships.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Starships\"}/>)}/>\r\n      <Route exact path=\"/\"\r\n        render={(props) => mainMenuOptions.map(m => <MainMenu {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport dataReducer from \"./dataReducer\"\r\nimport charactersReducer from \"./charactersReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport planetsReducer from \"./planetsReducer\";\r\nimport filmsReducer from \"./filmsReducer\";\r\nimport starshipsReducer from \"./starshipsReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    data: dataReducer,\r\n    profile: charactersReducer,\r\n    planets: planetsReducer,\r\n    films: filmsReducer,\r\n    starships: starshipsReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render((\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n</BrowserRouter>),\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}