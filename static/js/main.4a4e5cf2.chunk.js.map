{"version":3,"sources":["img/sw.png","components/CharactersProfile.jsx","redux/dataReducer.js","redux/api.js","redux/charactersReducer.js","components/CharactersProfileContainer.jsx","components/PlanetsProfile.jsx","redux/planetsReducer.js","components/PlanetsProfileContainer.jsx","components/FilmsProfile.jsx","redux/filmsReducer.js","components/FilmsProfileContainer.jsx","components/Header.jsx","redux/characters.js","redux/mainMenuOptions.js","redux/planets.js","redux/films.js","components/Content.jsx","components/ContentContainer.jsx","components/MainMenu.jsx","App.js","serviceWorker.js","redux/reduxStore.js","index.js"],"names":["module","exports","CharactersProfile","this","props","getCharacterInfo","id","clearData","className","alt","name","src","photo","height","mass","hairColor","gender","homeworld","React","Component","initialState","changeId","type","dataReducer","state","action","api","fetch","ref","method","getHomeworld","dispatch","then","response","text","data","json","JSON","parse","charactersReducer","CharactersProfileContainer","connect","profile","newPostText","hair_color","PlanetsProfile","getPlanetInfo","planetName","rotation","climate","population","filmsTitlesArr","map","film","index","key","getFilms","films","filmsTitles","filmsUrl","i","results","length","includes","url","push","title","filmsArr","planetsReducer","PlanetsProfileContainer","planets","rotation_period","FilmsProfile","getFilmInfo","episodeId","director","releaseDate","filmsReducer","episode_id","release_date","FilmsProfileContainer","Header","to","logo","characters","mainMenuOptions","Content","useState","isHidden","setIsHidden","link","onClick","changePhoto","onMouseOver","onMouseOut","TransitionGroup","timeout","CSSTransition","classNames","ContentContainer","newId","newPhoto","MainMenu","App","exact","path","render","m","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4a4e5cf2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sw.b78faeed.png\";","import React from 'react'\r\n\r\nclass CharactersProfile extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getCharacterInfo(this.props.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={this.props.name} src={this.props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {this.props.name &&<p>Name: {this.props.name}</p>}\r\n                    {this.props.height &&<p>Height: {this.props.height}</p>}\r\n                    {this.props.mass &&<p>Mass: {this.props.mass}</p>}\r\n                    {this.props.hairColor &&<p>Hair Color: {this.props.hairColor}</p>}\r\n                    {this.props.gender &&<p>Gender: {this.props.gender}</p>}\r\n                    {this.props.homeworld && <p>Homeworld: {this.props.homeworld}</p>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n}\r\n\r\nexport default CharactersProfile","const CHANGE_ID = \"CHANGE_ID\"\r\nconst CHANGE_PHOTO = \"CHANGE_PHOTO\"\r\n\r\nlet initialState = {\r\n    id: \"\",\r\n    photo: \"\"\r\n}\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_ID: {\r\n            return {...state, id: action.id}\r\n        }\r\n        case CHANGE_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeId = (id) => ({type: CHANGE_ID, id})\r\nexport const changePhoto = (photo) => ({type: CHANGE_PHOTO, photo})\r\n\r\nexport default dataReducer;","export const api = {\r\n    get(id) {\r\n        return fetch(`https://swapi.co/api/people/${id}`)\r\n    },\r\n    getRef(ref) {\r\n        return fetch(ref)\r\n    },\r\n    getPlanet(id) {\r\n        return fetch(`https://swapi.co/api/planets/${id}`,{method:\"POST\"})\r\n    },\r\n    getFilm(id) {\r\n        return fetch(`https://swapi.co/api/films/${id}`,{method: \"POST\"})\r\n    }\r\n}","import {api} from './api'\r\n\r\nconst SET_CHARACTER = \"SET_CHARACTER\"\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_HOMEWORLD = \"SET_HOMEWORLD\"\r\n\r\n\r\nlet initialState = {\r\n    name: null,\r\n    height: null,\r\n    mass: null,\r\n    hairColor: null,\r\n    gender: null,\r\n    homeworld: null,\r\n    \r\n}\r\n\r\nconst charactersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CHARACTER: {\r\n            return {\r\n                ...state, \r\n                name: action.name,\r\n                height: action.height,\r\n                mass: action.mass,\r\n                hairColor: action.hairColor,\r\n                gender: action.gender,\r\n            }\r\n        }\r\n        case SET_HOMEWORLD: {\r\n            return {\r\n                ...state, \r\n                homeworld: action.homeworld\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                name: null,\r\n                height: null,\r\n                mass: null,\r\n                hairColor: null,\r\n                gender: null,\r\n                homeworld: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCharacter = (name,height,mass,hairColor,gender) => ({type: SET_CHARACTER, name,height,mass,hairColor,gender})\r\nexport const setHomeworld = (homeworld) => ({type: SET_HOMEWORLD, homeworld})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\nexport const getCharacterInfo = (id) => (dispatch) => {\r\n    api.get(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setCharacter(json.name,json.height,json.mass,json.hair_color,json.gender))\r\n            dispatch(getHomeworld(json.homeworld))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport const getHomeworld = (id) => (dispatch) => {\r\n    api.getRef(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setHomeworld(json.name))\r\n            \r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport default charactersReducer;","import CharactersProfile from './CharactersProfile'\r\nimport {connect} from 'react-redux'\r\nimport {changeId} from '../redux/dataReducer'\r\nimport {getCharacterInfo,clearData} from '../redux/charactersReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        name: state.profile.name,\r\n        height: state.profile.height,\r\n        mass: state.profile.mass,\r\n        gender: state.profile.gender,\r\n        hairColor: state.profile.hairColor,\r\n        homeworld: state.profile.homeworld,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newPostText) => {\r\n            dispatch(changeId(newPostText));\r\n        },\r\n        getCharacterInfo: (id) => {\r\n            dispatch(getCharacterInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData());\r\n        },\r\n    }\r\n}\r\n\r\nconst CharactersProfileContainer = connect(mapStateToProps, mapDispatchToProps)(CharactersProfile)\r\nexport default CharactersProfileContainer;","import React from 'react'\r\n\r\nclass PlanetsProfile extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getPlanetInfo(this.props.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={this.props.planetName} src={this.props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {this.props.planetName &&<p>Name: {this.props.planetName}</p>}\r\n                    {this.props.rotation &&<p>Rotation period: {this.props.rotation}</p>}\r\n                    {this.props.climate &&<p>Climate: {this.props.climate}</p>}\r\n                    {this.props.population &&<p>Population: {this.props.population}</p>}\r\n                    {this.props.filmsTitlesArr &&<p><b>Films:</b></p>}\r\n                    {this.props.filmsTitlesArr && this.props.filmsTitlesArr.map((film,index) => {return <p key={index}>{film}</p>})}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n}\r\n\r\nexport default PlanetsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_PLANET = \"SET_PLANET\"\r\nconst SET_FILMS_TITLES = \"SET_FILMS_TITLES\"\r\n\r\nlet initialState = {\r\n    planetName: null,\r\n    climate: null,\r\n    rotation: null,\r\n    population: null,\r\n    filmsTitlesArr: null,\r\n}\r\n\r\nconst planetsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_PLANET: {\r\n            return {\r\n                ...state, \r\n                planetName: action.planetName,\r\n                climate: action.climate,\r\n                rotation: action.rotation,\r\n                population: action.population\r\n            }\r\n        }\r\n        case SET_FILMS_TITLES: {\r\n            return {\r\n                ...state, \r\n                filmsTitlesArr: action.filmsArr\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                planetName: null,\r\n                climate: null,\r\n                rotation: null,\r\n                population: null,\r\n                filmsTitlesArr: null,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPlanet = (planetName,rotation,climate,population) => ({type: SET_PLANET, planetName,rotation,climate,population})\r\nexport const setFilmsTitles = (filmsArr) => ({type: SET_FILMS_TITLES, filmsArr})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getPlanetInfo = (id) => (dispatch) => {\r\n    api.getPlanet(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setPlanet(json.name,json.rotation_period,json.climate,json.population))\r\n            dispatch(getFilms(json.films))\r\n            \r\n\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\nexport const getFilms = (films) =>  (dispatch) => {\r\n    let filmsTitles = []\r\n    let filmsUrl = []\r\n        api.getRef(`https://swapi.co/api/films`)\r\n        .then(response => {\r\n            response.text()\r\n            .then(data => {\r\n                let json = JSON.parse(data);\r\n                for (let i=0;i<json.results.length;i++) {\r\n                    if (films.includes(json.results[i].url)) {\r\n                        filmsUrl.push(json.results[i].url)\r\n                        \r\n                    }\r\n                }\r\n            }).then(() => {\r\n                for (let i =0;i<filmsUrl.length;i++) {\r\n                api.getRef(filmsUrl[i])\r\n                .then(response => {\r\n                    response.text()\r\n                    .then(data => {\r\n                        let json = JSON.parse(data);\r\n                        filmsTitles.push(json.title)\r\n                    })\r\n                    .then(() => {\r\n                        if (filmsTitles.length === filmsUrl.length) {\r\n                            dispatch(setFilmsTitles(filmsTitles))\r\n                        }\r\n                    })\r\n                })\r\n                }\r\n            })\r\n        }\r\n        )\r\n}\r\n\r\n\r\n\r\nexport default planetsReducer;","import PlanetsProfile from './PlanetsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {clearData,getPlanetInfo} from '../redux/planetsReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        planetName: state.planets.planetName,\r\n        climate: state.planets.climate,\r\n        rotation: state.planets.rotation,\r\n        population: state.planets.population,\r\n        filmsTitlesArr: state.planets.filmsTitlesArr\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getPlanetInfo: (id) => {\r\n            dispatch(getPlanetInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData())\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst PlanetsProfileContainer = connect(mapStateToProps, mapDispatchToProps)(PlanetsProfile)\r\nexport default PlanetsProfileContainer;","import React from 'react'\r\n\r\nclass FilmsProfile extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getFilmInfo(this.props.id)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.clearData()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <div>\r\n                    <img className=\"mainPhoto\" alt={this.props.title} src={this.props.photo} />\r\n                </div>\r\n                <div className=\"characterInfo\">\r\n                    {this.props.title &&<p>Title: {this.props.title}</p>}\r\n                    {this.props.episodeId &&<p>Episode №: {this.props.episodeId}</p>}\r\n                    {this.props.director &&<p>Director: {this.props.director}</p>}\r\n                    {this.props.releaseDate &&<p>Release Data: {this.props.releaseDate}</p>}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n}\r\n}\r\n\r\nexport default FilmsProfile","import {api} from './api'\r\n\r\nconst CLEAR_DATA = \"CLEAR_DATA\"\r\nconst SET_FILM = \"SET_FILM\"\r\n\r\nlet initialState = {\r\n    title: null,\r\n    episodeId: null,\r\n    director: null,\r\n    releaseDate: null\r\n}\r\n\r\nconst filmsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FILM: {\r\n            return {\r\n                ...state, \r\n                title: action.title,\r\n                episodeId: action.episode_id,\r\n                director: action.director,\r\n                releaseDate: action.release_date\r\n            }\r\n        }\r\n        case CLEAR_DATA: {\r\n            return {\r\n                ...state, \r\n                title: null,\r\n                episodeId: null,\r\n                director: null,\r\n                releaseDate: null\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFilm = (title,episode_id,director,release_date) => ({type: SET_FILM, title,episode_id,director,release_date})\r\nexport const clearData = () => ({type: CLEAR_DATA})\r\n\r\n\r\nexport const getFilmInfo = (id) => (dispatch) => {\r\n    api.getFilm(id)\r\n    .then(response => {\r\n        response.text()\r\n        .then(data => {\r\n            let json = JSON.parse(data);\r\n            dispatch(setFilm(json.title,json.episode_id,json.director,json.release_date))\r\n        })\r\n    }\r\n    )\r\n}\r\n\r\n\r\nexport default filmsReducer;","import FilmsProfile from './FilmsProfile'\r\nimport {connect} from 'react-redux'\r\nimport {changeId} from '../redux/dataReducer'\r\nimport {getFilmInfo,clearData} from '../redux/filmsReducer'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        id: state.data.id,\r\n        photo: state.data.photo,\r\n        title: state.films.title,\r\n        episodeId: state.films.episodeId,\r\n        director: state.films.director,\r\n        releaseDate: state.films.releaseDate,\r\n        \r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newPostText) => {\r\n            dispatch(changeId(newPostText));\r\n        },\r\n        getFilmInfo: (id) => {\r\n            dispatch(getFilmInfo(id));\r\n        },\r\n        clearData: () => {\r\n            dispatch(clearData());\r\n        },\r\n    }\r\n}\r\n\r\nconst FilmsProfileContainer = connect(mapStateToProps, mapDispatchToProps)(FilmsProfile)\r\nexport default FilmsProfileContainer;","import React from 'react'\r\nimport logo from '../img/sw.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"Header\" >\r\n        <Link to=\"\" >\r\n            <img src={logo}  alt=\"swLogo\" className=\"graficLogo\" />\r\n        </Link>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default Header","export const characters = [\r\n    {\r\n        id: 1,\r\n        name: \"Luke Skywalker\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"C-3PO\",\r\n        photo: \"https://images.immediate.co.uk/production/volatile/sites/3/2019/10/EP9-FF-001686-336e75b.jpg?quality=90&resize=620,413\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"R2-D2\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/1/1a/R2d2.jpg/revision/latest/scale-to-width-down/500?cb=20120924084739\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Darth Vader\",\r\n        photo: \"https://cdn1us.denofgeek.com/sites/denofgeekus/files/vader-main.jpg\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Leia Organa\",\r\n        photo: \"https://am22.akamaized.net/tms/cnt/uploads/2017/08/leiatop1-650x574.jpg\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Owen Lars\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/e/eb/OwenCardTrader.png/revision/latest?cb=20171108050140\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"Beru Whitesun Lars\",\r\n        photo: \"https://i.imgur.com/hMBCi5x.jpg\"\r\n    },\r\n    {\r\n        id: 8,\r\n        name: \"R5-D4\",\r\n        photo: \"https://cdn11.bigcommerce.com/s-0kvv9/images/stencil/1280x1280/products/159139/222171/apifmy1pb__62136.1493318333.jpg?c=2&imbypass=on\"\r\n    },\r\n    {\r\n        id: 9,\r\n        name: \"Biggs Darklighter\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/0/00/BiggsHS-ANH.png/revision/latest?cb=20130305010406\"\r\n    },\r\n    {\r\n        id: 10,\r\n        name: \"Obi-Wan Kenobi   \",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4e/ObiWanHS-SWE.jpg/revision/latest?cb=20111115052816\"\r\n    },\r\n\r\n]","export const mainMenuOptions = [\r\n    {\r\n        id: 1,\r\n        name: \"Characters\",\r\n        photo: \"https://lumiere-a.akamaihd.net/v1/images/luke-skywalker-i-am-a-jedi_fce1d84d.jpeg?region=204%2C0%2C414%2C413\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Planets\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Films\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/91H91NbI2xL._SL1500_.jpg\"\r\n    },\r\n]","export const planets = [\r\n    {\r\n        id: 1,\r\n        name: \"Tatooine\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/7/7e/Tatooine_EotECR.png/revision/latest?cb=20180110135447\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Alderaan\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/4/4a/Alderaan.jpg/revision/latest?cb=20061211013805\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Yavin IV\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/d/d4/Yavin-4-SWCT.png/revision/latest?cb=20181015023938\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Hoth\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/1d/Hoth_SWCT.png/revision/latest?cb=20160630022322\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Dagobah\",\r\n        photo: \"https://vignette.wikia.nocookie.net/ru.starwars/images/4/43/%D0%9F%D0%BB%D0%B0%D0%BD%D0%B5%D1%82%D0%B0_%D0%94%D0%B0%D0%B3%D0%BE%D0%B1%D0%B0.jpg/revision/latest?cb=20090310212450\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Bespin\",\r\n        photo: \"https://vignette.wikia.nocookie.net/starwars/images/1/11/Bespin-SWCT.png/revision/latest?cb=20181010054421\"\r\n    },\r\n\r\n]","export const films = [\r\n    {\r\n        id: 1,\r\n        name: \"A New Hope\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81aA7hEEykL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"The Empire Strikes Back\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BYmU1NDRjNDgtMzhiMi00NjZmLTg5NGItZDNiZjU5NTU4OTE0XkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_.jpg\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Return of the Jedi\",\r\n        photo: \"https://images-na.ssl-images-amazon.com/images/I/81g8vEs4ixL.jpg\"\r\n\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"The Phantom Menace\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/2FBC8CE938F5498156EAC7CC360A462CCF1BF88D62FBFE4359C8A4C771173886\"\r\n\r\n    },\r\n    {\r\n        id: 5,\r\n        name: \"Attack of the Clones\",\r\n        photo: \"https://img08.mgo-images.com/image/thumbnail?id=MMVAF9757360A18D049CADC51FA6B5B25F8D&ql=70&sizes=310x465\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: \"Revenge of the Sith\",\r\n        photo: \"https://prod-ripcut-delivery.disney-plus.net/v1/variant/disney/277134346F37706DA1B69EA4667370305DC38C997EC5CAAE030F80FF85BBA463\"\r\n    },\r\n    {\r\n        id: 7,\r\n        name: \"The Force Awakens\",\r\n        photo: \"https://m.media-amazon.com/images/M/MV5BOTAzODEzNDAzMl5BMl5BanBnXkFtZTgwMDU1MTgzNzE@._V1_.jpg\"\r\n    },\r\n]","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst Content = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n    let click = () => {\r\n        props.changeId(props.id);\r\n        props.changePhoto(props.photo);\r\n    }\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    const link = `${props.type}/info`\r\n        return (\r\n        <div className=\"card\" onClick={click} onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={link}>\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import Content from './Content'\r\nimport {connect} from 'react-redux'\r\nimport {changeId, changePhoto} from '../redux/dataReducer'\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeId: (newId) => {\r\n            dispatch(changeId(newId));\r\n        },\r\n        changePhoto: (newPhoto) => {\r\n            dispatch(changePhoto(newPhoto));\r\n        }\r\n    }\r\n}\r\n\r\nconst ContentContainer = connect(null, mapDispatchToProps)(Content)\r\nexport default ContentContainer;","import React,{useState} from \"react\"\r\nimport '../App.css';\r\nimport {NavLink} from 'react-router-dom'\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group'\r\n\r\n\r\nconst MainMenu = (props) => {\r\n    let [isHidden, setIsHidden] = useState(true)\r\n\r\n    let textAppear = () => {\r\n        setIsHidden(false)\r\n    }\r\n    let textDissapear = () => {\r\n        setIsHidden(true)\r\n    }\r\n    return (\r\n        <div className=\"card\" onMouseOver={textAppear} onMouseOut={textDissapear}>\r\n            <NavLink to={props.name}>\r\n                <img className=\"transform\" alt={props.name} src={props.photo} id={props.id}/>\r\n                <TransitionGroup timeout={0}>\r\n                    {!isHidden && <CSSTransition timeout={0} classNames=\"option\"><div className=\"onHoverText\">{props.name}</div></CSSTransition>}\r\n                </TransitionGroup>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainMenu","import React from 'react';\r\nimport './App.css';\r\nimport CharactersProfileContainer from './components/CharactersProfileContainer';\r\nimport PlanetsProfileContainer  from './components/PlanetsProfileContainer';\r\nimport FilmsProfileContainer  from './components/FilmsProfileContainer';\r\nimport {Route} from 'react-router-dom'\r\nimport Header from './components/Header.jsx'\r\nimport {characters} from './redux/characters'\r\nimport {mainMenuOptions} from './redux/mainMenuOptions'\r\nimport {planets} from './redux/planets'\r\nimport {films} from './redux/films'\r\nimport ContentContainer from './components/ContentContainer'\r\nimport MainMenu from './components/MainMenu'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path=\"/Characters\"\r\n        render={(props) => characters.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Characters\"}/>)}/>  \r\n      <Route exact path=\"/Characters/info\"\r\n        render={(props) => <CharactersProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets/info\"\r\n        render={(props) => <PlanetsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Films/info\"\r\n        render={(props) => <FilmsProfileContainer {...props}  />}/>\r\n      <Route exact path=\"/Planets\"\r\n        render={(props) => planets.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Planets\"}/>)}/>\r\n      <Route exact path=\"/Films\"\r\n        render={(props) => films.map(m => <ContentContainer {...props} name={m.name} key={m.id} id={m.id} photo={m.photo} type={\"Films\"}/>)}/>\r\n      <Route exact path=\"/\"\r\n        render={(props) => mainMenuOptions.map(m => <MainMenu {...props} name={m.name} key={m.id} id={m.id} photo={m.photo}/>)}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {createStore, combineReducers, applyMiddleware} from \"redux\"\r\nimport dataReducer from \"./dataReducer\"\r\nimport charactersReducer from \"./charactersReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport planetsReducer from \"./planetsReducer\";\r\nimport filmsReducer from \"./filmsReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    data: dataReducer,\r\n    profile: charactersReducer,\r\n    planets: planetsReducer,\r\n    films: filmsReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/reduxStore';\r\n\r\nReactDOM.render((\r\n<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n</BrowserRouter>),\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}